@@ -0,0 +1,242 @@
<?php 
// Database connection
include ('config.php');

$myupdate = 0; // Initialize $myupdate before the loop
$showAlert = false; // Initialize showAlert to false
$reassignedSubjects = []; // Initialize reassignedSubjects array

// Delete code
if (isset($_POST["delete"])) {
    $deleteSubID = $_POST["delete"];
    $sqlDeleteRecord = $mysqli->prepare("DELETE FROM subject WHERE subID=?");
    $sqlDeleteRecord->bind_param('s', $deleteSubID);
    $sqlDeleteRecord->execute();
    $sqlDeleteRecord->close();

    echo "<script>alert('Record deleted successfully.')</script>";
    header("refresh:1;url=editsubject.php");
}

// Save the data and reassign constraint violation
if (isset($_POST["savedata"])) {
    foreach ($_POST['subID'] as $key => $subID) {
        $newSubID = $_POST['newSubID'][$key];
        $subname = $_POST['subname'][$key];
        $qualification = $_POST['qualification'][$key];
        $sem = $_POST['sem'][$key];
        $lecid = $_POST['lecid'][$key];
        $course = $_POST['course'][$key];

        // Prepare and execute the SQL query to update the subject data
        $sqlUpdateSubject = "UPDATE subject SET subID=?, subname=?, qualification=?, sem=?, lecid=?, course=? WHERE subID=?";
        $stmtUpdateSubject = $mysqli->prepare($sqlUpdateSubject);
        $stmtUpdateSubject->bind_param('sssssss', $newSubID, $subname, $qualification, $sem, $lecid, $course, $subID);
        $stmtUpdateSubject->execute();
        $stmtUpdateSubject->close();


        // Identify lecturers with more than 3 subjects
        $sqlExceedingSubjects = "SELECT lecid FROM subject GROUP BY lecid HAVING COUNT(subID) > 3";
        $resultExceedingSubjects = $mysqli->query($sqlExceedingSubjects);
        $lecturerExceedingSubjects = [];

        while ($row = $resultExceedingSubjects->fetch_assoc()) {
            $lecturerExceedingSubjects[] = $row['lecid'];
        }

        if (!empty($lecturerExceedingSubjects)) {
            // Reassign subjects from lecturers with more than 3 subjects
            foreach ($lecturerExceedingSubjects as $exceedingLecturer) {
                $sqlReassignSubject = "
                    UPDATE subject
                    SET lecid = (
                        SELECT lecid
                        FROM subject
                        GROUP BY lecid
                        HAVING COUNT(subID) <= 2
                        ORDER BY COUNT(subID) ASC
                        LIMIT 1
                    )
                    WHERE lecid = '$exceedingLecturer'
                    LIMIT 1";

                $mysqli->query($sqlReassignSubject);
                $reassignedSubjects[$subID] = $exceedingLecturer;
            }
        }
    }

    // Check lecturer's subjects count
    $sqlLecturerSubjects = "SELECT lecid, COUNT(subID) AS subjectCount FROM subject GROUP BY lecid";
    $resultLecturerSubjects = $mysqli->query($sqlLecturerSubjects);
    $lecturerSubjects = array();

    while ($row = $resultLecturerSubjects->fetch_assoc()) {
        $lecturerSubjects[$row['lecid']] = $row['subjectCount'];
    }

    // Set showAlert if any lecturer exceeds the subject count
    foreach ($lecturerSubjects as $lecturerID => $subjectCount) {
        if ($subjectCount > 3) {
            $showAlert = true;
            break;
        }
    }
}


//reassign lec
if (isset($_POST["reassign"])) {
    // Reset all lecturer assignments
    $sqlResetAssignments = "UPDATE subject SET lecid = NULL";
    $mysqli->query($sqlResetAssignments);

    // Get all subject IDs for reassignment
    $sqlAllSubjects = "SELECT subID FROM subject";
    $resultAllSubjects = $mysqli->query($sqlAllSubjects);
    $subjectsForReassignment = [];

    while ($row = $resultAllSubjects->fetch_assoc()) {
        $subjectsForReassignment[] = $row['subID'];
    }

    // Loop through subjects and reassign them
    foreach ($subjectsForReassignment as $subjectID) {
        // Select a random lecturer
        $sqlSelectRandomLecturer = "SELECT lec_id FROM lecturer ORDER BY RAND() LIMIT 1";
        $resultRandomLecturer = $mysqli->query($sqlSelectRandomLecturer);
        $rowRandomLecturer = $resultRandomLecturer->fetch_assoc();
        $randomLecturerID = $rowRandomLecturer['lec_id'];

        // Update subject with the random lecturer
        $sqlReassignToLecturer = "UPDATE subject SET lecid = ? WHERE subID = ?";
        $stmtReassignToLecturer = $mysqli->prepare($sqlReassignToLecturer);
        $stmtReassignToLecturer->bind_param('ss', $randomLecturerID, $subjectID);
        $stmtReassignToLecturer->execute();

        // Add debugging output
        echo "Subject ID: $subjectID - Rows affected: " . $stmtReassignToLecturer->affected_rows . "<br>";

        if ($stmtReassignToLecturer->affected_rows > 0) {
            echo "Lecturer reassigned for subject $subjectID.<br>";
        } else {
            echo "Lecturer not reassigned for subject $subjectID.<br>";
        }

        $stmtReassignToLecturer->close();
    }

    // Refresh the page after reassignment
    header("refresh:1;url=editsubject.php");
    echo "<script>alert('Lecturer reassigned successfully.')</script>";
}
?>

<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" href="/asset/timetable.css">
    <title>Manage subject data</title>
</head>
<body>
    <h2>Edit Timeslots</h2>
    <p></p>

    <table class ="custom-table" id="myTable">
    <thead>
            <tr>
                <th>#</th>
                <th>Timetable ID</th>
                <th>Subject Name</th>
                <th>Lecturer ID</th>
                <th>Start Time</th>
                <th>End Time</th>
                <th>Day</th>
                <th>Class Type</th>
                <th>Sub ID</th>
                <th>Venue ID</th>
                <th>Actions</th>
            </tr>
        </thead>
        <form method="post" action="editsubject.php">
        <?php
            $sqlTimetable = "SELECT * FROM timetable";
            $resultTimetable = $mysqli->query($sqlTimetable);
            $no = 1;
            while($row = $resultTimetable->fetch_assoc()) {
                $timetableID = $row["timetable_id"];
                $subjectName = $row["subject_name"];
                $lecID = $row["lec_id"];
                $startTime = $row["start_time"];
                $endTime = $row["end_time"];
                $day = $row["day"];
                $classtype = $row["classtype"];
                $subID = $row["subID"];
                $venueID = $row["venueID"];
        ?>

        <tr>
    <td><?php echo $no ?></td>
    <input type="hidden" name="timetableID[]" value="<?php echo $timetableID ?>">
    <td><input type="text" name="newTimetableID[]" value="<?php echo $timetableID ?>"></td>
    <td><input type="text" name="subjectName[]" value="<?php echo $subjectName ?>"></td>
    <td><input type="text" name="lecID[]" value="<?php echo $lecID ?>"></td>
    <td><input type="text" name="startTime[]" value="<?php echo $startTime ?>"></td>
    <td><input type="text" name="endTime[]" value="<?php echo $endTime ?>"></td>
    <td><input type="text" name="day[]" value="<?php echo $day ?>"></td>
    <td><input type="text" name="classtype[]" value="<?php echo $classtype ?>"></td>
    <td><input type="text" name="subID[]" value="<?php echo $subID ?>"></td>
    <td><input type="text" name="venueID[]" value="<?php echo $venueID ?>"></td>
    <td>
        <button type="submit" name="delete" value="<?php echo $timetableID ?>" onclick="return confirm('Are you sure you want to delete this record?')">Delete</button>
    </td>
</tr>
        <?php
            $no++;
        }
        ?>
        </form>
        </table>
        <br>
        <button name="savedata" class="link-button">Save</button>
    </form>
    <form method="post" action="timetable.php">
        <button type="submit">Back to timetable</button>
    </form>
    <form method="post" name="updaterenewal" action="editsubject.php">
    <button type="submit" name="reassign" class="link-button">Reassign Lecturers </button>
</form>
</body>
</html>


<?php
// Database connection
include('config.php');
var_dump($_POST);
$showAlert = false; // Initialize showAlert to false

// Delete code
if (isset($_POST["delete"])) {
    $deleteTimetableID = $_POST["delete"];
    $sqlDeleteRecord = $mysqli->prepare("DELETE FROM timetable WHERE timetable_id=?");
    $sqlDeleteRecord->bind_param('s', $deleteTimetableID);
    $sqlDeleteRecord->execute();
    $sqlDeleteRecord->close();

    echo "<script>alert('Record deleted successfully.')</script>";
    header("refresh:1;url=edittimeslot.php");
}

// Save the data
if (isset($_POST["savedata"])) {
    foreach ($_POST['timetableID'] as $key => $timetableID) {
        $startTime = $_POST['startTime'][$key];
        $endTime = $_POST['endTime'][$key];
        $day = $_POST['day'][$key];
        $classtype = $_POST['classtype'][$key];
        $subID = $_POST['subID'][$key];
        $venueID = $_POST['venueID'][$key];
        $hours = $_POST['hours'][$key];

        // Check for clashes with existing timeslots
        $sqlCheckClashes = "SELECT * FROM timetable WHERE lec_id = ? AND day = ? AND ((start_time >= ? AND start_time < ?) OR (end_time > ? AND end_time <= ?) OR (start_time <= ? AND end_time >= ?)) AND timetable_id != ?";
        $stmtCheckClashes = $mysqli->prepare($sqlCheckClashes);
        $stmtCheckClashes->bind_param('sssssssss', $lecID, $day, $startTime, $endTime, $startTime, $endTime, $startTime, $endTime, $timetableID);
        $stmtCheckClashes->execute();
        $resultClashes = $stmtCheckClashes->get_result();
        $clashesExist = ($resultClashes->num_rows > 0);
        $stmtCheckClashes->close();

        // Prepare and execute the SQL query to update the timetable data
        $sqlUpdateTimetable = "UPDATE timetable SET lec_id=?, start_time=?, end_time=?, day=?, classtype=?, subID=?, venueID=?, hours=? WHERE timetable_id=?";
        $stmtUpdateTimetable = $mysqli->prepare($sqlUpdateTimetable);
        $stmtUpdateTimetable->bind_param('sssssssss', $lecID, $startTime, $endTime, $day, $classtype, $subID, $venueID, $hours, $timetableID);
        $stmtUpdateTimetable->execute();
        $stmtUpdateTimetable->close();
    }

    $showAlert = true; // Set showAlert to true after data is saved
}

if (isset($_POST["reassign"])) {
    // Get distinct lecturer IDs
    $sqlDistinctLecturers = "SELECT DISTINCT lec_id FROM timetable";
    $resultDistinctLecturers = $mysqli->query($sqlDistinctLecturers);
    $lecturerIDs = [];
    while ($row = $resultDistinctLecturers->fetch_assoc()) {
        $lecturerIDs[] = $row['lec_id'];
    }
    // Function to reassign timeslots for a specific lecturer
    function reassignTimeslots($lecID) {
        global $mysqli;
        $sqlExistingTimeslots = "SELECT * FROM timetable WHERE lec_id = ?";
        $stmtExistingTimeslots = $mysqli->prepare($sqlExistingTimeslots);
        $stmtExistingTimeslots->bind_param('s', $lecID);
        $stmtExistingTimeslots->execute();
        $resultExistingTimeslots = $stmtExistingTimeslots->get_result();
        $newTimeslots = [];
        while ($row = $resultExistingTimeslots->fetch_assoc()) {
            // Generate a random hour between 8 and 15
            $randomHour = rand(8, 15);
        
            // Get the existing minutes and seconds from the start time
            $startTimeParts = explode(":", $row["start_time"]);
            $existingMinutes = $startTimeParts[1];
            $existingSeconds = $startTimeParts[2];
        
            // Construct the new start time with the random hour and existing minutes/seconds
            $newStartTime = sprintf("%02d:%s:%s", $randomHour, $existingMinutes, $existingSeconds);
        
            // Calculate end time as start time plus two hours
            $newEndTime = date("H:i:s", strtotime($newStartTime) + (2 * 60 * 60));
        
            // Check for clashes with existing timeslots
            $clashExists = false;
            
            foreach ($newTimeslots as $existingTimeslot) {
                if (($newStartTime >= $existingTimeslot['start_time'] && $newStartTime < $existingTimeslot['end_time']) ||
                    ($newEndTime > $existingTimeslot['start_time'] && $newEndTime <= $existingTimeslot['end_time'])) {
                    $clashExists = true;
                    break;
                }
            }
            if (!$clashExists) {
                $newTimeslots[] = [
                    'start_time' => $newStartTime,
                    'end_time' => $newEndTime
                ];
                // Update timeslot in the database
                $sqlUpdateTimeslot = "UPDATE timetable SET start_time = ?, end_time = ? WHERE timetable_id = ?";
                $stmtUpdateTimeslot = $mysqli->prepare($sqlUpdateTimeslot);
                $stmtUpdateTimeslot->bind_param('sss', $newStartTime, $newEndTime, $row['timetable_id']);
                $stmtUpdateTimeslot->execute();
                $stmtUpdateTimeslot->close();
            }
        }
    }
    // Loop through lecturers and reassign timeslots
    foreach ($lecturerIDs as $lecturerID) {
        reassignTimeslots($lecturerID);
    }
    // Refresh the page after reassignment
    header("refresh:1;url=edittimeslot.php");
    echo "<script>alert('Timeslots reassigned successfully.')</script>";
}

?>

<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" href="/asset/timetable.css">
    <title>Manage Timeslots</title>
</head>
<body>
    <h2>Edit Timeslots</h2>
    <form method="post" action="edittimeslot.php">
        <table class ="custom-table" id="myTable">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Lecturer ID</th>
                    <th>Lecturer name</th>
                    <th>Start Time</th>
                    <th>End Time</th>
                    <th>Day</th>
                    <th>Class Type</th>
                    <th>Sub ID</th>
                    <th>Venue ID</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <?php
            $sqlTimetable = "SELECT timetable.*, lecturer.lecname, lecturer.maxhours 
            FROM timetable
            INNER JOIN lecturer ON timetable.lec_id = lecturer.lec_id
            ORDER BY timetable.lec_id, FIELD(LOWER(day), 'monday', 'tuesday', 'wednesday', 'thursday', 'friday');";
            $resultTimetable = $mysqli->query($sqlTimetable);
            $no = 1;
            while($row = $resultTimetable->fetch_assoc()) {
                $timetableID = $row["timetable_id"]; // Corrected this line

        $lecID = $row["lec_id"];
        $lecName = $row["lecname"]; // Added lecturer name
        $startTime = $row["start_time"];
        $endTime = $row["end_time"];
        $day = $row["day"];
        $classtype = $row["classtype"];
        $subID = $row["subID"];
        $venueID = $row["venueID"];
        $cstatus = $row["cstatus"];
        $maxHours = $row["maxhours"]; // Maximum hours allowed for this lecturer
        $hours = $row["hours"];
        $totalHoursOfClass = 0;
    ?>
  <tr>
            <td><?php echo $no ?></td>
            <td><?php echo $lecID ?></td>
            <td><?php echo $lecName ?></td>
            <td>
                <input type="hidden" name="timetableID[]" value="<?php echo $timetableID ?>">
                <?php echo $timetableID ?>
            </td>
            <td><input type="text" name="startTime[]" value="<?php echo $startTime ?>"></td>
            <td><input type="text" name="endTime[]" value="<?php echo $endTime ?>"></td>
            <td><input type="text" name="day[]" value="<?php echo $day ?>"></td>
            <td><input type="text" name="classtype[]" value="<?php echo $classtype ?>"></td>
            <td><input type="text" name="subID[]" value="<?php echo $subID ?>"></td>
            <td><input type="text" name="venueID[]" value="<?php echo $venueID ?>"></td>
            <td><input type="text" name="cstatus[]" value="<?php echo $cstatus ?>"></td>
            <td><input type="number" name="hours[]" value="<?php echo $hours ?>"></td>
            <?php if ($totalHoursOfClass > $maxHours): ?>
                <td colspan="10"><span style="color: red;">Total hours exceed maximum!</span></td>
            <?php else: ?>
                <td>
                    <button type="submit" name="delete" value="<?php echo $timetableID ?>" onclick="return confirm('Are you sure you want to delete this record?')">Delete</button>
                </td>
            <?php endif; ?>
        </tr>
        <?php
            $no++;
        }
        ?>
    </table>
    <button type="submit" name="savedata" class="link-button">Save</button>
</form>